# syntax=docker/dockerfile:1

###################### build stage ######################
FROM golang:1.24 AS builder
WORKDIR /app

# 挂载本地缓存目录 ./tmp/go-mod-cache
RUN --mount=type=cache,target=/go/pkg/mod \
    --mount=type=cache,target=/root/.cache/go-build \
    echo "go build cache enabled"

COPY . .
RUN go mod tidy && \
    CGO_ENABLED=0 GOOS=linux go build -o api_server ./api/bookstore.go && \
    CGO_ENABLED=0 GOOS=linux go build -o add_rpc ./rpc/add/add.go && \
    CGO_ENABLED=0 GOOS=linux go build -o check_rpc ./rpc/check/check.go

###################### api image ######################
FROM alpine:latest AS api
WORKDIR /app
COPY --from=builder /app/api_server ./api_server
COPY api/etc ./api/etc
CMD ["./api_server", "-f", "api/etc/bookstore-api.yaml"]

###################### add image ######################
FROM alpine:latest AS add
WORKDIR /app
COPY --from=builder /app/add_rpc ./add_rpc
COPY rpc/add/etc ./rpc/add/etc
CMD ["./add_rpc", "-f", "rpc/add/etc/add.yaml"]

###################### check image ######################
FROM alpine:latest AS check
WORKDIR /app
COPY --from=builder /app/check_rpc ./check_rpc
COPY rpc/check/etc ./rpc/check/etc
CMD ["./check_rpc", "-f", "rpc/check/etc/check.yaml"]
